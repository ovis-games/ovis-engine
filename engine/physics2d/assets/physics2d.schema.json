{
  "$schema": "http://json-schema.org/draft/2019-09/schema#",

  "$defs": {
    "physics_world2d": {
      "title": "Physics World 2D",
      "type": "object",
      "properties": {
        "gravity": {
          "$ref": "core#/$defs/vector2",
          "title": "Gravity",
          "default": [0, -9.81],
          "description": "The world gravity vector."
        },
        "update_rate": {
          "type": "number",
          "title": "Update Rate (Hz)",
          "default": 50,
          "minimum": 1,
          "description": "The update rate in Hz."
        },
        "velocity_iterations": {
          "type": "integer",
          "title": "Velocity Iterations",
          "default": 6,
          "minimum": 1,
          "description": "Number of iterations for the velocity constraint solver."
        },
        "position_iterations": {
          "type": "integer",
          "title": "Position Iterations",
          "default": 6,
          "minimum": 1,
          "description": "Number of iterations for the position constraint solver."
        }
      }
    },
    "box2d_body": {
      "title": "Rigid Body 2D",
      "type": "object",
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "enum": ["static", "kinematic", "dynamic"],
          "default": "static",
          "description": "The body type: static, kinematic, or dynamic.\nstatic: zero mass, zero velocity, may be manually moved\nkinematic: zero mass, non-zero velocity set by user, moved by solver\ndynamic: positive mass, non-zero velocity determined by forces, moved by solver\nNote: if a dynamic body would have zero mass, the mass is set to one."
        },
        "linear_velocity": {
          "$ref": "core#/$defs/vector2",
          "title": "Linear Velocity",
          "default": [0, 0],
          "description": "The linear velocity of the body's origin in world co-ordinates."
        },
        "angular_velocity": {
          "title": "Angular Velocity",
          "type": "number",
          "default": 0,
          "description": "The angular velocity of the body."
        },
        "linear_damping": {
          "title": "Linear Damping",
          "type": "number",
          "default": 0,
          "description": "Linear damping is use to reduce the linear velocity. The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.\nUnits are 1/time"
        },
        "angular_damping": {
          "title": "Angular Damping",
          "type": "number",
          "default": 0,
          "description": "Angular damping is use to reduce the angular velocity. The damping parameter can be larger than 1.0f but the damping effect becomes sensitive to the time step when the damping parameter is large.\nUnits are 1/time"
        },
        "allow_sleep": {
          "title": "Allow Sleep",
          "type": "boolean",
          "default": true,
          "description": "Set this flag to false if this body should never fall asleep. Note that this increases CPU usage."
        },
        "is_awake": {
          "title": "Awake",
          "type": "boolean",
          "default": true,
          "description": "Is this body initially awake or sleeping?"
        },
        "is_rotation_fixed": {
          "title": "Fixed Rotation",
          "type": "boolean",
          "default": false,
          "description": "Should this body be prevented from rotating? Useful for characters."
        },
        "is_bullet": {
          "title": "Is Bullet",
          "type": "boolean",
          "default": false,
          "description": "Is this a fast moving body that should be prevented from tunneling through other moving bodies? Note that all bodies are prevented from tunneling through kinematic and static bodies. This setting is only considered on dynamic bodies.\nWARNING You should use this flag sparingly since it increases processing time."
        },
        "is_enabled": {
          "title": "Enabled",
          "type": "boolean",
          "default": true,
          "description": "Does this body start out enabled?"
        },
        "gravity_scale": {
          "title": "Gravity Scale",
          "type": "number",
          "default": 1,
          "description": "Scale the gravity applied to this body."
        },
        "friction": {
          "title": "Friction",
          "type": "number",
          "default": 0.2,
          "description": "The friction coefficient, usually in the range [0,1]."
        },
        "restitution": {
          "title": "Restitution",
          "type": "number",
          "default": 0,
          "description": "The restitution (elasticity) usually in the range [0,1]."
        },
        "restitution_threshold": {
          "title": "Restitution Threshold",
          "type": "number",
          "default": 1,
          "description": "Restitution velocity threshold, usually in m/s. Collisions above this speed have restitution applied (will bounce)."
        },
        "density": {
          "title": "Density",
          "type": "number",
          "default": 0,
          "description": "The density, usually in kg/m^2."
        },
        "is_sensor": {
          "title": "Is Sensor",
          "type": "boolean",
          "default": false,
          "description": "A sensor shape collects contact information but never generates a collision response."
        },
        "shape": {
          "$ref": "physics2d#/$defs/collision_shape_2d"
        }
      }
    },
    "rigid_body_2d": {
      "title": "Rigid Body 2D",
      "type": "object",
      "properties": {
        "shape": {
          "$ref": "physics2d#/$defs/collision_shape_2d"
        }
      }
    },
    "collision_shape_2d": {
      "title": "Collision Shape 2D",
      "type": "object",
      "description": "Represents a 2 dimensional collision shape.",
      "properties": {
        "type": {
          "title": "Type",
          "type": "string",
          "enum": ["circle", "polygon", "edge", "chain"],
          "default": ["circle"]
        },
        "vertices": {
          "title": "Vertices",
          "type": "array",
          "items": {
            "$ref": "core#/$defs/vector2"
          }
        },
        "radius": {
          "title": "Radius",
          "type": "number"
        }
      }
    }
  }
}